#!/bin/bash

# ======================================================
# 1PASSWORD SECURE SNIPPETS INTEGRATION SCRIPT
# HigherSelf Network Server Credential Management
# ======================================================

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Configuration
PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." && pwd)"
ENV_FILE="$PROJECT_ROOT/.env"

# Functions
print_header() {
    echo -e "${PURPLE}======================================================${NC}"
    echo -e "${PURPLE}🔐 1PASSWORD SECURE SNIPPETS INTEGRATION${NC}"
    echo -e "${PURPLE}HigherSelf Network Server Credential Management${NC}"
    echo -e "${PURPLE}======================================================${NC}"
    echo ""
}

print_section() {
    echo -e "${BLUE}📋 $1${NC}"
    echo "----------------------------------------"
}

print_success() {
    echo -e "${GREEN}✅ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}⚠️  $1${NC}"
}

print_error() {
    echo -e "${RED}❌ $1${NC}"
}

print_info() {
    echo -e "${CYAN}ℹ️  $1${NC}"
}

check_1password() {
    print_section "Checking 1Password Setup"
    
    # Check if 1Password CLI is installed
    if command -v op &> /dev/null; then
        print_success "1Password CLI found"
        op --version
    else
        print_warning "1Password CLI not found"
        print_info "Install from: https://developer.1password.com/docs/cli/get-started/"
    fi
    
    # Check if 1Password app is running
    if pgrep -f "1Password" > /dev/null; then
        print_success "1Password app is running"
    else
        print_warning "1Password app not running. Please start 1Password."
    fi
    
    # Check for secure snippets feature
    print_info "Ensure you have:"
    echo "  • 1Password for Mac version 8.10.46 or newer"
    echo "  • Secure snippets enabled in Settings > Labs"
    echo "  • Accessibility permissions granted"
    echo ""
}

create_snippet_templates() {
    print_section "Creating 1Password Snippet Templates"
    
    # Create snippets directory
    mkdir -p "$PROJECT_ROOT/1password-snippets"
    
    # Server Credentials Template
    cat > "$PROJECT_ROOT/1password-snippets/server-credentials.txt" << 'EOF'
# HigherSelf Network Server Environment - {date}
ENVIRONMENT=development
SERVER_HOST=0.0.0.0
SERVER_PORT=8000
VOICE_COMMAND_ENABLED=true
TERMIUS_VOICE_CONTROL_ENABLED=true
ONEPASSWORD_INTEGRATION=true

# Generated on: {date "%A, %B %d, %Y at %H:%M"}
# Last clipboard: {clipboard}
EOF
    
    # SiteGround FTP Template
    cat > "$PROJECT_ROOT/1password-snippets/siteground-ftp.txt" << 'EOF'
# SiteGround FTP Configuration - {date}
SITEGROUND_FTP_HOST=your_siteground_host
SITEGROUND_FTP_USERNAME=your_username
SITEGROUND_FTP_PASSWORD=your_secure_password
SITEGROUND_SFTP_PORT=22

# Connection test: sftp -P 22 username@host
# Generated: {date "%Y-%m-%d %H:%M:%S"}
EOF
    
    # Database Configuration Template
    cat > "$PROJECT_ROOT/1password-snippets/database-config.txt" << 'EOF'
# Database Configuration - {date}
MONGODB_URI=mongodb://username:password@host:27017/database
REDIS_URI=redis://password@host:port/db
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_API_KEY=your_api_key

# Generated: {date "%Y-%m-%d %H:%M:%S"}
EOF
    
    # Voice Command Log Template
    cat > "$PROJECT_ROOT/1password-snippets/voice-command-log.txt" << 'EOF'
**Voice Command Executed**
- **Time**: {date "%A, %B %d, %Y at %H:%M:%S"}
- **Command**: {clipboard}
- **Environment**: Development
- **Status**: ✅ Success

---
*Auto-generated by HigherSelf Voice Control System*
EOF
    
    # Server Status Report Template
    cat > "$PROJECT_ROOT/1password-snippets/server-status-report.txt" << 'EOF'
# 🖥️ HigherSelf Network Server Status Report

**Generated**: {date "%A, %B %d, %Y at %H:%M:%S"}

## 🔍 System Health
- **API Status**: ✅ Online
- **Database**: ✅ Connected
- **Redis Cache**: ✅ Active
- **Voice Control**: ✅ Enabled

## 📊 Current Environment
- **Environment**: Development
- **Server Port**: 8000
- **Docker Status**: Running

## 🎤 Recent Voice Commands
{clipboard}

---
*Report generated via Termius Voice Control*
EOF
    
    print_success "Snippet templates created in 1password-snippets/"
    echo ""
}

create_snippet_guide() {
    print_section "Creating 1Password Snippet Setup Guide"
    
    cat > "$PROJECT_ROOT/1PASSWORD_SNIPPETS_SETUP.md" << 'EOF'
# 1Password Secure Snippets Setup for HigherSelf Network Server

## 🔐 Required Snippets

### 1. Server Credentials (Shortcut: ;hsenv)
**Title**: HigherSelf Server Credentials
**Type**: Plain Text
**Content**: Copy from `1password-snippets/server-credentials.txt`

### 2. SiteGround FTP (Shortcut: ;sgftp)
**Title**: SiteGround FTP Access
**Type**: Plain Text
**Content**: Copy from `1password-snippets/siteground-ftp.txt`

### 3. Database Config (Shortcut: ;hsdb)
**Title**: HigherSelf Database URI
**Type**: Plain Text
**Content**: Copy from `1password-snippets/database-config.txt`

### 4. Voice Command Log (Shortcut: ;vclog)
**Title**: Voice Command Log
**Type**: Formatted Text
**Content**: Copy from `1password-snippets/voice-command-log.txt`

### 5. Server Status (Shortcut: ;status)
**Title**: Server Status Template
**Type**: Formatted Text
**Content**: Copy from `1password-snippets/server-status-report.txt`

## 🚀 Setup Instructions

1. **Open 1Password** → **New Item** → **Snippet**
2. **Copy content** from template files
3. **Set shortcuts** as specified above
4. **Choose appropriate type** (Plain Text or Formatted Text)
5. **Save snippet**

## 🎤 Usage with Voice Control

1. **Execute voice command** in Termius
2. **Command details** are copied to clipboard
3. **Use ;vclog** to create formatted log entry
4. **Use ;status** to generate status report

## 🔧 Dynamic Variables Available

- `{date}` - Current date
- `{time}` - Current time
- `{clipboard}` - Clipboard contents
- `{date "%format"}` - Custom date format
- `{date +30D}` - Date offsets (30 days from now)

## 🛡️ Security Benefits

- **Encrypted storage** - All snippets are end-to-end encrypted
- **No plaintext credentials** - Credentials never stored in plain text
- **Quick access** - Instant credential filling anywhere
- **Audit trail** - Track when credentials are used

## 📝 Example Usage

1. In Termius, say: **"server status"**
2. Command details copied to clipboard
3. In documentation app, type: **;vclog**
4. Formatted log entry appears with timestamp and command details
EOF
    
    print_success "1Password setup guide created: 1PASSWORD_SNIPPETS_SETUP.md"
    echo ""
}

update_env_file() {
    print_section "Updating Environment Configuration"
    
    # Enable 1Password integration in .env file
    if grep -q "ONEPASSWORD_INTEGRATION" "$ENV_FILE"; then
        sed -i.bak 's/ONEPASSWORD_INTEGRATION=.*/ONEPASSWORD_INTEGRATION=true/' "$ENV_FILE"
    else
        echo "ONEPASSWORD_INTEGRATION=true" >> "$ENV_FILE"
    fi
    
    # Add snippet shortcuts documentation
    if ! grep -q "# 1Password Snippet Shortcuts" "$ENV_FILE"; then
        cat >> "$ENV_FILE" << 'EOF'

# ==== 1PASSWORD SNIPPET SHORTCUTS ====
# Use these shortcuts in any app to expand secure snippets:
# ;hsenv  - Server environment variables
# ;sgftp  - SiteGround FTP credentials
# ;hsdb   - Database connection strings
# ;vclog  - Voice command log entry
# ;status - Server status report template
EOF
    fi
    
    print_success "Environment file updated with 1Password integration"
    echo ""
}

create_termius_integration() {
    print_section "Creating Termius + 1Password Integration"
    
    # Create enhanced Termius snippet that uses 1Password
    cat > "$PROJECT_ROOT/termius-setup/snippets-1password-integration.json" << 'EOF'
{
  "onepassword_integration_snippets": {
    "name": "HigherSelf 1Password Integration",
    "description": "Secure credential management with 1Password snippets",
    "version": "1.0.0"
  },
  "snippets": [
    {
      "id": "voice-with-1password-log",
      "name": "Voice Command with 1Password Logging",
      "description": "Execute voice command and log to 1Password",
      "category": "1Password Integration",
      "script": "#!/bin/bash\necho \"🎤 Executing voice command with 1Password logging...\"\necho \"Command: $1\"\necho \"Time: $(date)\"\n\n# Execute the voice command\ncurl -X POST \"http://localhost:8000/voice/server/control\" \\\n  -H \"Content-Type: application/json\" \\\n  -d \"{\\\"command\\\": \\\"$1\\\", \\\"environment\\\": \\\"development\\\"}\"\n\n# Copy command details to clipboard for 1Password snippet\necho \"Voice Command: $1\\nTime: $(date)\\nExecuted via Termius\" | pbcopy\n\necho \"\"\necho \"💡 Use ;vclog in any app to create formatted log entry\"\necho \"💡 Use ;status to generate status report with this command\"",
      "parameters": ["command"]
    },
    {
      "id": "secure-env-setup",
      "name": "Setup Environment with 1Password",
      "description": "Configure environment using 1Password snippets",
      "category": "1Password Integration",
      "script": "#!/bin/bash\necho \"🔐 Setting up environment with 1Password snippets...\"\necho \"\"\necho \"📋 Available snippets:\"\necho \"  ;hsenv  - Server environment variables\"\necho \"  ;sgftp  - SiteGround FTP credentials\"\necho \"  ;hsdb   - Database connection strings\"\necho \"\"\necho \"💡 Type any shortcut in this terminal to expand the snippet\"\necho \"💡 Snippets are securely encrypted and synced via 1Password\"\necho \"\"\necho \"🎯 Next steps:\"\necho \"1. Type ;hsenv to get server environment template\"\necho \"2. Fill in your actual credentials\"\necho \"3. Save to .env file\"\necho \"4. Restart server with new configuration\""
    }
  ]
}
EOF
    
    print_success "1Password integration snippets created"
    echo ""
}

main() {
    print_header
    
    print_info "Setting up 1Password Secure Snippets integration..."
    print_info "Project Root: $PROJECT_ROOT"
    echo ""
    
    check_1password
    create_snippet_templates
    create_snippet_guide
    update_env_file
    create_termius_integration
    
    print_section "Setup Complete!"
    print_success "1Password Secure Snippets integration setup completed!"
    echo ""
    print_info "Next steps:"
    echo "1. Open 1Password and create snippets using the templates"
    echo "2. Follow the guide in 1PASSWORD_SNIPPETS_SETUP.md"
    echo "3. Test snippets by typing shortcuts like ;hsenv"
    echo "4. Use voice commands in Termius - they'll log to clipboard"
    echo "5. Type ;vclog to create formatted log entries"
    echo ""
    print_warning "Remember:"
    echo "• Keep your 1Password vault secure"
    echo "• Use strong, unique shortcuts for snippets"
    echo "• Test snippets before using in production"
    echo "• Review snippet contents before expanding"
}

# Run main function
main "$@"

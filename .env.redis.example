# ====================================================================
# REDIS CONFIGURATION FOR HIGHERSELF NETWORK SERVER
# ====================================================================
# This file contains comprehensive Redis configuration options for
# development, staging, and production environments.
# Copy this file to .env and configure according to your environment.

# ==== BASIC REDIS CONNECTION ====
# Redis connection URI (takes precedence over individual settings)
# Format: redis://[username:password@]host:port/database
# For SSL: rediss://[username:password@]host:port/database
REDIS_URI=redis://localhost:6379/0

# Individual connection components (used if REDIS_URI is not set)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DATABASE=0
REDIS_USERNAME=default
REDIS_PASSWORD=

# ==== REDIS CLOUD CONFIGURATION ====
# For Redis Cloud deployments, use these settings:
# REDIS_URI=redis://default:your_password@redis-xxxxx.c280.us-central1-2.gce.redns.redis-cloud.com:18441
# REDIS_PASSWORD=your_redis_cloud_password
# REDIS_SSL=true

# ==== CONNECTION POOL SETTINGS ====
# Maximum number of connections in the pool
REDIS_MAX_CONNECTIONS=10

# Connection timeout settings (in seconds)
REDIS_TIMEOUT=5
REDIS_SOCKET_CONNECT_TIMEOUT=5
REDIS_SOCKET_TIMEOUT=5

# Health check interval (in seconds)
REDIS_HEALTH_CHECK_INTERVAL=30

# ==== SECURITY SETTINGS ====
# Enable SSL/TLS connection
REDIS_SSL=false

# SSL certificate requirements
REDIS_SSL_CERT_REQS=required

# SSL certificate paths (optional)
REDIS_SSL_CA_CERTS=
REDIS_SSL_CERTFILE=
REDIS_SSL_KEYFILE=

# ==== FEATURE FLAGS ====
# Enable/disable Redis features
REDIS_CACHE_ENABLED=true
REDIS_PUBSUB_ENABLED=true
REDIS_SESSION_STORE_ENABLED=true
REDIS_RATE_LIMITING_ENABLED=true

# ==== PERFORMANCE SETTINGS ====
# Retry configuration
REDIS_RETRY_ON_TIMEOUT=true
REDIS_RETRY_ON_ERROR=true
REDIS_MAX_RETRIES=3
REDIS_RETRY_DELAY=0.5

# ==== MONITORING SETTINGS ====
# Enable metrics collection
REDIS_METRICS_ENABLED=true

# Slow query threshold (in seconds)
REDIS_SLOW_QUERY_THRESHOLD=1.0

# ==== INTEGRATION TOGGLES ====
# Enable Redis integration
ENABLE_REDIS=true

# ====================================================================
# ENVIRONMENT-SPECIFIC CONFIGURATIONS
# ====================================================================

# ==== DEVELOPMENT ENVIRONMENT ====
# Use local Redis instance
# REDIS_URI=redis://localhost:6379/0
# REDIS_PASSWORD=
# REDIS_SSL=false

# ==== STAGING ENVIRONMENT ====
# Use Redis Cloud or managed Redis
# REDIS_URI=redis://default:staging_password@staging-redis.example.com:6379/0
# REDIS_PASSWORD=staging_password
# REDIS_SSL=true

# ==== PRODUCTION ENVIRONMENT ====
# Use Redis Cloud with SSL and authentication
# REDIS_URI=rediss://default:production_password@prod-redis.example.com:6380/0
# REDIS_PASSWORD=production_password
# REDIS_SSL=true
# REDIS_MAX_CONNECTIONS=20
# REDIS_TIMEOUT=10

# ====================================================================
# REDIS USAGE IN HIGHERSELF NETWORK
# ====================================================================
# Redis is used for the following purposes in the HigherSelf Network:
#
# 1. CACHING:
#    - API response caching
#    - Notion data caching
#    - Session data caching
#    - Computed results caching
#
# 2. REAL-TIME MESSAGING:
#    - Agent communication via pub/sub
#    - Webhook event distribution
#    - Real-time notifications
#    - Live updates to connected clients
#
# 3. SESSION MANAGEMENT:
#    - User session storage
#    - Authentication tokens
#    - Temporary data storage
#
# 4. RATE LIMITING:
#    - API rate limiting
#    - Request throttling
#    - Abuse prevention
#
# 5. TASK QUEUES:
#    - Background job queues
#    - Scheduled task management
#    - Workflow orchestration
#
# 6. METRICS AND MONITORING:
#    - Performance metrics
#    - Usage statistics
#    - Health monitoring data

# ====================================================================
# TROUBLESHOOTING
# ====================================================================
# Common issues and solutions:
#
# 1. Connection refused:
#    - Check if Redis server is running
#    - Verify host and port settings
#    - Check firewall settings
#
# 2. Authentication failed:
#    - Verify REDIS_PASSWORD is correct
#    - Check if Redis requires authentication
#    - Ensure username is correct (default: "default")
#
# 3. SSL/TLS errors:
#    - Verify REDIS_SSL setting
#    - Check certificate paths
#    - Ensure Redis server supports SSL
#
# 4. Performance issues:
#    - Increase REDIS_MAX_CONNECTIONS
#    - Adjust timeout settings
#    - Monitor Redis memory usage
#
# 5. Connection pool exhaustion:
#    - Increase REDIS_MAX_CONNECTIONS
#    - Check for connection leaks
#    - Monitor connection usage patterns

# ====================================================================
# SECURITY BEST PRACTICES
# ====================================================================
# 1. Always use strong passwords in production
# 2. Enable SSL/TLS for production deployments
# 3. Use Redis AUTH for authentication
# 4. Restrict Redis access to trusted networks
# 5. Regularly update Redis server
# 6. Monitor Redis logs for suspicious activity
# 7. Use Redis ACLs for fine-grained access control
# 8. Backup Redis data regularly
# 9. Use Redis Sentinel for high availability
# 10. Monitor Redis performance and memory usage

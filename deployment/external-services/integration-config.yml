# ======================================================
# HIGHERSELF NETWORK SERVER - EXTERNAL SERVICES INTEGRATION
# Comprehensive configuration for external API integrations
# ======================================================

# Global integration settings
global:
  timeout: 30s
  retry_attempts: 3
  retry_delay: 1s
  connection_pooling: true
  ssl_verification: true
  rate_limiting: true
  circuit_breaker: true
  health_checks: true

# Notion API Integration
notion:
  enabled: ${NOTION_ENABLED:-true}
  api_version: "2022-06-28"
  base_url: "https://api.notion.com/v1"
  
  authentication:
    type: bearer_token
    token_env: NOTION_API_TOKEN
    token_rotation: false
  
  rate_limiting:
    requests_per_second: 3
    burst_size: 10
    backoff_strategy: exponential
  
  connection:
    timeout: 30s
    keep_alive: true
    pool_size: 10
    max_retries: 3
  
  endpoints:
    databases:
      path: "/databases"
      methods: [GET, POST, PATCH]
      rate_limit: 3/s
    
    pages:
      path: "/pages"
      methods: [GET, POST, PATCH]
      rate_limit: 3/s
    
    blocks:
      path: "/blocks"
      methods: [GET, POST, PATCH, DELETE]
      rate_limit: 3/s
    
    search:
      path: "/search"
      methods: [POST]
      rate_limit: 1/s
  
  business_entity_mapping:
    the_7_space:
      workspace_id: ${THE_7_SPACE_NOTION_WORKSPACE}
      databases:
        contacts: ${THE_7_SPACE_CONTACTS_DB}
        events: ${THE_7_SPACE_EVENTS_DB}
        artworks: ${THE_7_SPACE_ARTWORKS_DB}
    
    am_consulting:
      workspace_id: ${AM_CONSULTING_NOTION_WORKSPACE}
      databases:
        contacts: ${AM_CONSULTING_CONTACTS_DB}
        projects: ${AM_CONSULTING_PROJECTS_DB}
        clients: ${AM_CONSULTING_CLIENTS_DB}
    
    higherself_core:
      workspace_id: ${HIGHERSELF_CORE_NOTION_WORKSPACE}
      databases:
        contacts: ${HIGHERSELF_CORE_CONTACTS_DB}
        community: ${HIGHERSELF_CORE_COMMUNITY_DB}
        content: ${HIGHERSELF_CORE_CONTENT_DB}
  
  health_check:
    endpoint: "/users/me"
    interval: 300s
    timeout: 10s
    expected_status: 200
  
  circuit_breaker:
    failure_threshold: 5
    recovery_timeout: 60s
    half_open_max_calls: 3

# OpenAI API Integration
openai:
  enabled: ${OPENAI_ENABLED:-true}
  api_version: "v1"
  base_url: "https://api.openai.com/v1"
  
  authentication:
    type: bearer_token
    token_env: OPENAI_API_KEY
    organization_env: OPENAI_ORG_ID
  
  rate_limiting:
    requests_per_minute: 3000
    tokens_per_minute: 90000
    backoff_strategy: exponential
  
  connection:
    timeout: 120s
    keep_alive: true
    pool_size: 5
    max_retries: 3
  
  models:
    chat:
      default: "gpt-4"
      fallback: "gpt-3.5-turbo"
      max_tokens: 4096
      temperature: 0.7
    
    embeddings:
      default: "text-embedding-ada-002"
      dimensions: 1536
    
    completions:
      default: "text-davinci-003"
      max_tokens: 2048
  
  endpoints:
    chat_completions:
      path: "/chat/completions"
      rate_limit: 60/min
      timeout: 120s
    
    embeddings:
      path: "/embeddings"
      rate_limit: 3000/min
      timeout: 30s
    
    moderations:
      path: "/moderations"
      rate_limit: 1000/min
      timeout: 10s
  
  business_entity_usage:
    the_7_space:
      use_cases: [content_generation, image_analysis, customer_support]
      monthly_budget: 100
      priority: medium
    
    am_consulting:
      use_cases: [document_analysis, report_generation, client_communication]
      monthly_budget: 500
      priority: high
    
    higherself_core:
      use_cases: [community_moderation, content_curation, personalization]
      monthly_budget: 300
      priority: high
  
  health_check:
    endpoint: "/models"
    interval: 600s
    timeout: 15s
    expected_status: 200
  
  circuit_breaker:
    failure_threshold: 3
    recovery_timeout: 120s
    half_open_max_calls: 2

# HuggingFace API Integration
huggingface:
  enabled: ${HUGGINGFACE_ENABLED:-true}
  base_url: "https://api-inference.huggingface.co"
  
  authentication:
    type: bearer_token
    token_env: HUGGINGFACE_API_KEY
  
  rate_limiting:
    requests_per_hour: 1000
    backoff_strategy: linear
  
  connection:
    timeout: 60s
    keep_alive: true
    pool_size: 3
    max_retries: 2
  
  models:
    text_classification:
      default: "cardiffnlp/twitter-roberta-base-sentiment-latest"
      fallback: "distilbert-base-uncased-finetuned-sst-2-english"
    
    text_generation:
      default: "gpt2"
      fallback: "distilgpt2"
    
    question_answering:
      default: "deepset/roberta-base-squad2"
      fallback: "distilbert-base-cased-distilled-squad"
  
  health_check:
    endpoint: "/models"
    interval: 900s
    timeout: 20s
    expected_status: 200

# SMTP Email Integration
smtp:
  enabled: ${SMTP_ENABLED:-true}
  
  providers:
    primary:
      host: ${SMTP_HOST:-smtp.gmail.com}
      port: ${SMTP_PORT:-587}
      use_tls: ${SMTP_USE_TLS:-true}
      username_env: SMTP_USERNAME
      password_env: SMTP_PASSWORD
    
    backup:
      host: ${SMTP_BACKUP_HOST:-smtp.sendgrid.net}
      port: ${SMTP_BACKUP_PORT:-587}
      use_tls: true
      username_env: SMTP_BACKUP_USERNAME
      password_env: SMTP_BACKUP_PASSWORD
  
  connection:
    timeout: 30s
    pool_size: 5
    max_retries: 3
  
  rate_limiting:
    emails_per_hour: 1000
    emails_per_day: 10000
  
  business_entity_config:
    the_7_space:
      from_email: "noreply@the7space.com"
      from_name: "The 7 Space"
      reply_to: "info@the7space.com"
      templates:
        welcome: "the_7_space_welcome"
        event_notification: "the_7_space_event"
    
    am_consulting:
      from_email: "noreply@amconsulting.com"
      from_name: "A.M. Consulting"
      reply_to: "contact@amconsulting.com"
      templates:
        welcome: "am_consulting_welcome"
        project_update: "am_consulting_project"
    
    higherself_core:
      from_email: "noreply@higherself.network"
      from_name: "HigherSelf Network"
      reply_to: "community@higherself.network"
      templates:
        welcome: "higherself_welcome"
        community_update: "higherself_community"
  
  health_check:
    test_email: "healthcheck@higherself.network"
    interval: 3600s
    timeout: 30s

# Cloud Storage Integration
cloud_storage:
  aws_s3:
    enabled: ${AWS_S3_ENABLED:-false}
    region: ${AWS_REGION:-us-east-1}
    
    authentication:
      access_key_env: AWS_ACCESS_KEY_ID
      secret_key_env: AWS_SECRET_ACCESS_KEY
      session_token_env: AWS_SESSION_TOKEN
    
    buckets:
      primary: ${AWS_S3_BUCKET:-higherself-storage}
      backup: ${AWS_S3_BACKUP_BUCKET:-higherself-backup}
      logs: ${AWS_S3_LOGS_BUCKET:-higherself-logs}
    
    connection:
      timeout: 60s
      max_retries: 3
      retry_mode: adaptive
    
    business_entity_paths:
      the_7_space: "entities/the_7_space/"
      am_consulting: "entities/am_consulting/"
      higherself_core: "entities/higherself_core/"
  
  azure_blob:
    enabled: ${AZURE_BLOB_ENABLED:-false}
    account_name: ${AZURE_STORAGE_ACCOUNT}
    container: ${AZURE_STORAGE_CONTAINER:-higherself}
    
    authentication:
      connection_string_env: AZURE_STORAGE_CONNECTION_STRING
  
  gcp_storage:
    enabled: ${GCP_STORAGE_ENABLED:-false}
    project_id: ${GCP_PROJECT_ID}
    bucket: ${GCP_STORAGE_BUCKET:-higherself-storage}
    
    authentication:
      credentials_env: GOOGLE_APPLICATION_CREDENTIALS

# Webhook Integration
webhooks:
  enabled: ${WEBHOOKS_ENABLED:-true}
  
  security:
    signature_verification: true
    secret_env: WEBHOOK_SECRET
    allowed_ips:
      - "0.0.0.0/0"  # Configure based on environment
  
  endpoints:
    notion:
      path: "/webhooks/notion"
      methods: [POST]
      authentication: signature
    
    github:
      path: "/webhooks/github"
      methods: [POST]
      authentication: signature
    
    stripe:
      path: "/webhooks/stripe"
      methods: [POST]
      authentication: signature
  
  rate_limiting:
    requests_per_minute: 100
    burst_size: 20

# Monitoring and Observability
monitoring:
  external_service_metrics:
    enabled: true
    collection_interval: 60s
    
    metrics:
      - response_time
      - success_rate
      - error_rate
      - rate_limit_usage
      - circuit_breaker_state
  
  health_checks:
    enabled: true
    check_interval: 300s
    timeout: 30s
    
    services:
      - notion
      - openai
      - huggingface
      - smtp
      - cloud_storage
  
  alerting:
    enabled: true
    channels: [email, slack, webhook]
    
    thresholds:
      response_time: 5000ms
      error_rate: 5%
      success_rate: 95%

# Environment-specific overrides
environments:
  development:
    global:
      timeout: 60s
      retry_attempts: 1
      ssl_verification: false
    
    rate_limiting:
      enabled: false
    
    circuit_breaker:
      enabled: false
  
  staging:
    global:
      timeout: 45s
      retry_attempts: 2
    
    rate_limiting:
      enabled: true
    
    circuit_breaker:
      enabled: true
  
  production:
    global:
      timeout: 30s
      retry_attempts: 3
      ssl_verification: true
    
    rate_limiting:
      enabled: true
      strict_mode: true
    
    circuit_breaker:
      enabled: true
      aggressive_mode: true
    
    monitoring:
      detailed_logging: true
      performance_tracking: true

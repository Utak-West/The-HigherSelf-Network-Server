version: '3.8'

services:
  windsurf-agent:
    image: thehigherselfnetworkserver
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 8000:8000
    environment:
      - RUNNING_IN_CONTAINER=true
      - PYTHONUNBUFFERED=1
      - MONGODB_URI=mongodb://mongodb:27017/higherselfnetwork
      - REDIS_URI=redis://redis:6379/0
      - CONSUL_HTTP_ADDR=consul:8500
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    depends_on:
      - mongodb
      - redis
      - consul
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=8000"
      - "prometheus.path=/metrics"

  celery-worker:
    image: thehigherselfnetworkserver
    environment:
      - RUNNING_IN_CONTAINER=true
      - PYTHONUNBUFFERED=1
      - MONGODB_URI=mongodb://mongodb:27017/higherselfnetwork
      - REDIS_URI=redis://redis:6379/0
      - CONSUL_HTTP_ADDR=consul:8500
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - redis
      - mongodb
    restart: unless-stopped
    command: celery -A services.task_queue_service:task_queue worker --loglevel=info --concurrency=4

  celery-beat:
    image: thehigherselfnetworkserver
    environment:
      - RUNNING_IN_CONTAINER=true
      - PYTHONUNBUFFERED=1
      - MONGODB_URI=mongodb://mongodb:27017/higherselfnetwork
      - REDIS_URI=redis://redis:6379/0
      - CONSUL_HTTP_ADDR=consul:8500
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - redis
      - celery-worker
    restart: unless-stopped
    command: celery -A services.task_queue_service:task_queue beat --loglevel=info

  nginx:
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./deployment/ssl:/etc/nginx/ssl
    depends_on:
      - windsurf-agent
    restart: unless-stopped

  mongodb:
    image: mongo:6.0
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
      - ./deployment/mongodb:/docker-entrypoint-initdb.d
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ROOT_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD:-securepassword}
      - MONGO_INITDB_DATABASE=higherselfnetwork
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/higherselfnetwork --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped
    command: ["--auth", "--bind_ip_all"]
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=27017"

  redis:
    image: redis:7.0-alpine
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
      - ./deployment/redis/redis.conf:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=6379"

  consul:
    image: hashicorp/consul:1.15
    ports:
      - 8500:8500
    volumes:
      - consul_data:/consul/data
    command: agent -server -ui -client=0.0.0.0 -bootstrap-expect=1 -data-dir=/consul/data
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - ./deployment/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - windsurf-agent
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - ./deployment/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  logs:
  data:
  mongodb_data:
  redis_data:
  consul_data:
  prometheus_data:
  grafana_data:
